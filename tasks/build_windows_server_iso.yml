--- 
- name: Ensure OSCDIMG is installed and ready to be used
  include_tasks: 
    file: ensure_oscdimg_installed.yml

- name: Make sure destination ISO dir exists
  win_file:
    path: "{{ windows_iso_file_path | win_dirname }}"
    state: directory

- name: Check if Windows Server ISO is already downloaded
  win_stat:
    path: "{{ windows_iso_file_path }}"
  register: windows_iso_file_path_file

- name: Download Windows Server ISO if not exists
  ansible.builtin.win_get_url:
    url: "{{ windows_server_download_url }}"
    dest: "{{ windows_iso_file_path }}"
  when: not windows_iso_file_path_file.stat.exists

- name: Make sure destination Server Temp dir exists
  win_file:
    path: "{{ windows_server_temp_setup_file | win_dirname }}"
    state: directory

- name: Check if Windows Server Directory is already setup
  win_stat:
    path: "{{ windows_server_temp_setup_file }}"
  register: windows_file_data

- name: Mount original ISO
  ansible.windows.win_powershell:
    script: |
      $mountResult = Mount-DiskImage "{{ windows_iso_file_path }}" -PassThru;
      return ($mountResult | Get-Volume).DriveLetter.ToString();
  register: MountOutput
  when: not windows_file_data.stat.exists  

- name: Copy ISO Contents to Temp Directory
  ansible.windows.win_powershell:
    script: |
      Copy-Item -Path "{{ MountOutput.output[0] }}:\*" -Destination "{{ windows_server_temp_setup_file | win_dirname }}" -Recurse;
  when: not windows_file_data.stat.exists

- name: Dismount original ISO
  ansible.windows.win_powershell:
    script: |
      Dismount-DiskImage -ImagePath "{{ windows_iso_file_path }}"
  when: not windows_file_data.stat.exists

# Create Vendor Folders:
- name: Creates directory
  win_file:
    path: '{{ windows_server_temp_setup_file | win_dirname }}\sources\$OEM$\$$\Setup\Scripts'
    state: directory
    recurse: yes      

# Copy files
- name: ConfigureRemotingForAnsible.ps1
  win_copy:
    src: "{{ role_path }}/files/ConfigureRemotingForAnsible.ps1"
    dest: '{{ windows_server_temp_setup_file | win_dirname }}\sources\$OEM$\$$\Setup\Scripts\ConfigureRemotingForAnsible.ps1'

- name: FixNetwork.ps1
  win_copy:
    src: "{{ role_path }}/files/FixNetwork.ps1"
    dest: '{{ windows_server_temp_setup_file | win_dirname }}\sources\$OEM$\$$\Setup\Scripts\FixNetwork.ps1'

- name: Autounattend.xml
  win_copy:
    src: "{{ role_path }}/files/Autounattend.xml"
    dest: '{{ windows_server_temp_setup_file | win_dirname }}\Autounattend.xml'

# Create the ISO
- name: Create Windows Server ISO
  register: win_out
  ansible.windows.win_command:
    cmd: oscdimg.exe -m -o -u2 -udfver102 -bootdata:2#p0,e,b{{ windows_server_temp_setup_file | win_dirname }}\boot\etfsboot.com#pEF,e,b{{ windows_server_temp_setup_file | win_dirname }}\efi\microsoft\boot\efisys_noprompt.bin {{ windows_server_temp_setup_file | win_dirname }} {{ windows_iso_output_path }}
    chdir: "{{ oscdimg_install_path }}"